/**
 * @file Game
 * @author Mike Joyce [hello@mikejoyce.io]
 */

/* TODO:
 * - Add leader board
 * - Add pause button
 * - Add bonus lives
 * - Make it tablet & mobile friendly
 */

import Constants from 'Constants';
import { Engine } from 'engine';
import { Player } from 'player';
import { Stats } from 'stats';
import { Enemies } from 'enemies';
import { Collectables } from 'collectables';
import { Level } from 'level';
import * as Helpers from 'helpers'
import * as Music from 'music';
import * as SFX from 'sfx';

export const Game = (function() {

  /* Enemies Array.
   * All enemies generated by the Enemies.spawn() method are pushed
   * into this array.
   */
  const allEnemies = [];

  /* Gems Array.
   * All gems generated by the Gems.spawn() method are pushed
   * into this array.
   */
  const allGems = [];

  /* Pause the game by default to prevent the player moving around
   * when arrow keys are pressed. Set to false when the start or
   * game over screens are hidden from view.
   */
  let paused = true;

  $(document).ready(function() {

  	// Play background music
  	Music.track.play();

  	// Adjust background music volume
  	Music.track.volume(0.3);

  	// Hide the start screen on button click
  	$('#playGame').click(function() {

  		// Hide the start screen
  		$('#startScreen').fadeOut('fast');

  		// Play the select sound effect
  		SFX.gameSelect.play();

  		// Fade in the game music
  		Music.track.fade(0.3, 0.7, 2000);

      enemies.spawn(2);

      collectables.spawn(2);

  		/* Unpause the game to allow the player to move around
  		 * when arrow keys are pressed
  		 */
      setState('unpause');

  	});

  	// Hide the game over screen on button click
  	$('#playAgain').click(function() {

  		// Hide the game over screen
  		$('#gameOver').hide()

  		// Play the select sound effet
  		SFX.gameSelect.play();

  		// Fade in the game music
  		Music.track.fade(0.3, 1.0, 1000);

  		/* Unpause the game to allow the player to move around
  		 * when arrow keys are pressed
  		 */
  		setState('unpause');

  	});

  	// Show the how to play screen on click
  	$('#howToOpen').click(function() {

  		// Play the select sound effect
  		SFX.gameSelect.play();

  		// Fade out the game music
  		Music.track.fade(0.7, 0.3, 2000);
  		$('#howTo').fadeIn('fast');

      /* Pause the game to prevent the player from moving around
       * when arrow keys are pressed
       */
      setState('pause');

  	});

  	// Hide the how to play screen on click
  	$('#howToClose').click(function() {

  		// Play the select sound effect
  		SFX.gameSelect.play();

  		// Fade in the game music
  		Music.track.fade(0.3, 0.7, 2000);
  		$('#howTo').fadeOut('fast');

      /* Unpause the game to allow the player to move around
       * when arrow keys are pressed
       */
      setState('unpause');

  	});

  	// Toggle game music
  	$('.toggle-music').click(function() {

  		if ($(this).hasClass('on')) {
  			Music.track.pause();
  			$(this).hide();
  			$('.toggle-music.off').show();
  		}

  		if ($(this).hasClass('off')) {
  			Music.track.play();
  			$(this).hide();
  			$('.toggle-music.on').show();
  		}

  	});

  });

  function setState(state) {
    if (state === 'pause') {
      paused = true;
    } else {
      paused = false;
    }
  }

  function getState() {
    return paused;
  }

  // Instantiate a new Collectables object
  const collectables = new Collectables();

  // Instatiate a new Stats object
  const stats = new Stats();

  // Instantiate new Player object
  const player = new Player();

  // Instantiate a new Enemies object
  const enemies = new Enemies();

  // Instantiate a new level object
  const level = new Level();

  /**
   * Return public variables/objects
   */
  return {
    allEnemies,
    allGems,
    enemies,
    collectables,
    getState,
    level,
    player,
    setState,
    stats
  }

})();
